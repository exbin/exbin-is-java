apply from: '../tools.gradle'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'org.exbin.is.ExbinIs'
    ext.appArgs = '-dev'
}

def configureExec(task) {
    task.main = mainClass
    task.classpath = sourceSets.main.runtimeClasspath
    if (!hasProperty('mainClass')) {
        task.args appArgs
    }
}

task run(type: JavaExec) {
    task -> configureExec(task)
}

task debug(type: JavaExec) {
    task -> configureExec(task)
    debug = true
}

repositories {
    mavenLocal()
    mavenCentral()
    flatDir {
        dirs "../../lib"
    }
}

dependencies {
    compile moduleDep('ExbinIsJava', 'org.exbin.is', 'exbin-is-framework')
    compile moduleDep('XbupJava', 'org.exbin.xbup', 'xbup-core')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-gui-frame-api')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-gui-frame')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-gui-menu')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-gui-file')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-gui-editor')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-gui-about')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-gui-help')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-gui-undo')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-gui-data')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-gui-options')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-editor-xbup')
    compile moduleDep('ExbinFrameworkJava', 'org.exbin.framework', 'exbin-framework-editor-text')
    compile 'commons-cli:commons-cli:1.2'
    runtime 'mysql:mysql-connector-java:5.1.30'
    runtime 'org.eclipse.persistence:javax.persistence:2.1.0'
    runtime 'org.eclipse.persistence:eclipselink:2.5.1'
    testCompile group: 'junit', name: 'junit', version: '4.10'
}

def manifestClassPath() {
    try {
        return (configurations.runtime.collect { '../lib/' + it.getName() }).join(' ')
    } catch (Exception) {
        return ""
    }
}

jar {
    manifest {
        attributes(
            'Main-Class': mainClass,
            'Class-Path': manifestClassPath()
        )
    }
}

